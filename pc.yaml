#################################################################
#################PACKAGE CONTROLLO CARICHI#######################
#################################################################


# Il package seguente, unito allo script python "update_entities.py" mira ad evitare il distacco del contatore a causa della troppa potenza assorbita dai vari elettrodomestici (carichi).
# Requisito hardware fondamentale è la presenza di switch sui carichi da controllare e di un sensore che misura la potenza dei singoli carichi. 
# Personalmente ho utilizzato dispositivi Shelly 1PM e Shelly Plug S, perfetti per lo scopo.
# E' consigliato, ma non tassativo, l'utilizzo di un sensore che monitori il consumo complessivo dell'impianto (es. Shelly EM).
# La logica prevede che in caso l'utilizzo complessivo superi il valore limite impostato, il pacchetto inizi il distacco dei carichi a minore priorità fino a quelli a maggiore priorità,
# fino a che l'utilizzo complessivo della potenza rientri nel limite prefissato.
# Lo script tiene memoria dell'assorbimento del carico prima del distacco e lo ricollega solo quando la disponibilità di potenza è sufficiente a non causare un nuovo distacco.
# La configurazione è interamente tramite interfaccia lovelace, tranne il gruppo di notifica (notify.tutti) che va impostato manualmente.
# Il pacchetto è funzionante ma non ottimizzato.

recorder:
  include:
    entities:
      - sensor.potenza_carichi_selezionato
      - sensor.potenza_carichi_phantom
      - sensor.potenza_massima

#################################################################
########################## SENSORI ##############################
#################################################################
sensor:

# La soluzione più efficace è utilizzare un sensore di potenza a monte dell'impianto, poco prima del contatore.
# In tal caso basta selezionare il sensore appropriato nella configurazione.
# Nell'esempio seguente è utilizzato uno ShellyEM, nel canale 1.
#  - platform: mqtt
#      name: "Potenza carichi"
#      state_topic: "shellies/NOME_SHELLY/emeter/0/power"
#      value_template: "{{ value }}"
#      unit_of_measurement : "Watt"
#      icon: mdi:speedometer

# In alternativa è possibile utilizzare i sensori di potenza dei maggiori carichi utilizzati e mantenere un certo margine di tolleranza.
# Questo comporta di monitorare tutti i maggiori carichi (forno, fornelli, phon, condizionatori, ecc...).
# Naturalmente in questo modo non si può valutare il consumo complessivo, quindi si potrebbe superare il valore limite senza che intervenga il controllo carichi.
# Ma utilizzando un valore conservativo di potenza massima (ad es. 3kW) e contando sulla tolleranze di 180 minuti fino al 80% (nell'es. 3,6kW) dovrebbe essere funzionale.
  - platform: template
    sensors:
      potenza_carichi_virtuale:
        unit_of_measurement: 'W'
        value_template: >
          {{ states(states('input_text.carico_1_potenza'))|int +
             states(states('input_text.carico_2_potenza'))|int +
             states(states('input_text.carico_3_potenza'))|int +
             states(states('input_text.carico_4_potenza'))|int +
             states(states('input_text.carico_5_potenza'))|int +
             states(states('input_text.carico_6_potenza'))|int +
             states(states('input_text.carico_7_potenza'))|int +
             states(states('input_text.carico_8_potenza'))|int +
             states(states('input_text.carico_9_potenza'))|int +
             states(states('input_text.carico_10_potenza'))|int }}

# Somma di tutte le potenza "phantom", ovvero i carichi che erano in funzione con un dato assorbimento ma sono stati disattivati.
  - platform: template
    sensors:
      potenza_carichi_phantom:
        unit_of_measurement: 'W'
        value_template: >
          {{ states('input_number.potenza_1_phantom')|int + 
             states('input_number.potenza_2_phantom')|int + 
             states('input_number.potenza_3_phantom')|int + 
             states('input_number.potenza_4_phantom')|int + 
             states('input_number.potenza_5_phantom')|int + 
             states('input_number.potenza_6_phantom')|int + 
             states('input_number.potenza_7_phantom')|int + 
             states('input_number.potenza_8_phantom')|int + 
             states('input_number.potenza_9_phantom')|int + 
             states('input_number.potenza_10_phantom')|int}}

  - platform: template
    sensors:
      potenza_carichi_selezionato:
        unit_of_measurement: 'W'
        value_template: "{{ states(states('input_text.potenza_carichi')) |int }}"

# Valore massimo che i carichi possono impegnare prima di cominciare il distacco
  - platform: template
    sensors:
      potenza_massima:
        unit_of_measurement: 'W'
        value_template: "{{ states('input_number.potenza_massima')|int }}"

#################################################################
######################### INPUT_* ###############################
#################################################################
input_text:
  carico_1_potenza:
  carico_2_potenza:
  carico_3_potenza:
  carico_4_potenza:
  carico_5_potenza:
  carico_6_potenza:
  carico_7_potenza:
  carico_8_potenza:
  carico_9_potenza:
  carico_10_potenza:

  carico_1_switch:
  carico_2_switch:
  carico_3_switch:
  carico_4_switch: 
  carico_5_switch: 
  carico_6_switch: 
  carico_7_switch: 
  carico_8_switch: 
  carico_9_switch: 
  carico_10_switch: 

  potenza_carichi:

input_boolean:
# Switch per l'interfaccia grafica 
  attiva_power_control:
    name: Attiva Power Control 
    icon: mdi:car-cruise-control

  impostazioni_power_control:
    name: Mostra Impostazioni Power Control
    icon: mdi:car-cruise-control

input_number:

# Uso interno. Mantengono memoria della potenza utilizzata al momento del distacco, per valutare la riattivazione.
   potenza_1_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_2_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_3_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_4_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_5_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_6_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_7_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_8_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_9_phantom:
     initial: 0
     min: 0
     max: 10000
   potenza_10_phantom:
     initial: 0
     min: 0
     max: 10000

#Slider per la configurazione della potenza massima utilizzabile
   potenza_massima:
     min: 0
     max: 7200
     step: 100


#Slider per la configurazione dei tempi di intervento
#Dopo tot SECONDI di superamento della potenza massima, inizia il distacco
   tempo_stop:
     min: 0
     max: 60
     step: 1

#Dopo tot MINUTI che la potenza utilizzata è rientrata nei limiti, inizia a riattivare i carichi
   tempo_start:
     min: 0
     max: 60
     step: 1  

#Attende tot SECONDI tra un distacco e l'altro.
   attesa_stop:
     min: 0
     max: 60
     step: 1  

#Attende tot MINUTI tra una riattivazione e l'altra per dare il tempo al carico di riprendere il suo normale assorbimento
   attesa_start:
     min: 0
     max: 60
     step: 1  


# Drop-down per la configurazione di PC. L'elenco di interruttori e sensori viene aggiornato all'avvio di HA.
input_select:

# Selezione dele sensore di  potenza utilizzata. Se non configurato, viene utilizzato il sensore virtuale 
  potenza_carichi:
    name: Sensore potenza carichi
    options:
      - Seleziona

# Interruttore carichi
  carico_1_switch:
    name: Interruttore Carico Priorità 1
    options:
      - Seleziona
  carico_2_switch:
    name: Interruttore Carico Priorità 2
    options:
      - Seleziona
  carico_3_switch:
    name: Interruttore Carico Priorità 3
    options:
      - Seleziona
  carico_4_switch:
    name: Interruttore Carico Priorità 4
    options:
      - Seleziona
  carico_5_switch:
    name: Interruttore Carico Priorità 5
    options:
      - Seleziona
  carico_6_switch:
    name: Interruttore Carico Priorità 6
    options:
      - Seleziona
  carico_7_switch:
    name: Interruttore Carico Priorità 7
    options:
      - Seleziona
  carico_8_switch:
    name: Interruttore Carico Priorità 8
    options:
      - Seleziona
  carico_9_switch:
    name: Interruttore Carico Priorità 9
    options:
      - Seleziona
  carico_10_switch:
    name: Interruttore Carico Priorità 10
    options:
      - Seleziona

# Sensori potenza carichi
  carico_1_potenza:
    name: Sensore Carico Priorità 1
    options:
      - Seleziona
  carico_2_potenza:
    name: Sensore Carico Priorità 2
    options:
      - Seleziona
  carico_3_potenza:
    name: Sensore Carico Priorità 3
    options:
      - Seleziona
  carico_4_potenza:
    name: Sensore Carico Priorità 4
    options:
      - Seleziona
  carico_5_potenza:
    name: Sensore Carico Priorità 5
    options:
      - Seleziona
  carico_6_potenza:
    name: Sensore Carico Priorità 6
    options:
      - Seleziona
  carico_7_potenza:
    name: Sensore Carico Priorità 7
    options:
      - Seleziona
  carico_8_potenza:
    name: Sensore Carico Priorità 8
    options:
      - Seleziona
  carico_9_potenza:
    name: Sensore Carico Priorità 9
    options:
      - Seleziona
  carico_10_potenza:
    name: Sensore Carico Priorità 10
    options:
      - Seleziona

#################################################################
####################### AUTOMAZIONI #############################
#################################################################

automation:
#Automazione che si triggera nel momento in cui la la potenza utilizzata supera la potenza massima impostata.
#Agisce dopo TOT secondi dal superamento del limite, avvia lo script di distacco ed invia notifica di intervento.
#Ripete l'avvio dello script di distacco finché la potenza impegnata non rientra nel limite.
  - id: 'powercontrol_carichi_stop'
    alias: PowerControl - Carichi Stop
    description: ''
    trigger:
    - platform: template
      value_template: "{{ states(states('input_text.potenza_carichi')) |int > states.sensor.potenza_massima.state|int }}"
      for: 
        seconds: "{{ states.input_number.tempo_stop.state|int }}"
    condition:
    - condition: state
      entity_id: input_boolean.attiva_power_control
      state: 'on'
    action:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Automazione Carichi Stop triggerata: Potenza carichi ({{ states(states('input_text.potenza_carichi'))|int }})>Potenza massima({{states.sensor.potenza_massima.state|int }})"
    - repeat:
        sequence:
          - service: system_log.write
            data_template:
              level: debug
              logger: homeassistant.components.pc
              message: "Avviato script stop carichi: potenza carichi {{ states(states('input_text.potenza_carichi'))|int}}"
          - service: script.turn_on
            data: {}
            entity_id: script.stop_carichi
        until:
          - condition: template
            value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int }}"
    mode: single

# Se per TOT minuti il limite di potenza è rispettato, avvia lo script di riattivazione dei carichi fino a che la potenza "phantom" non è zero.
  - id: 'powercontrol_carichi_start'
    alias: PowerControl - Carichi Start
    description: ''
    trigger:
    - platform: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.sensor.potenza_carichi_phantom.state|int < states.sensor.potenza_massima.state|int and states.sensor.potenza_carichi_phantom.state|int > 0 }}"
      for:
        minutes: "{{ states.input_number.tempo_start.state|int }}"
    condition:
    - condition: state
      entity_id: input_boolean.attiva_power_control 
      state: 'on'
    - condition: template
      value_template: "{{ states.sensor.potenza_carichi_phantom.state|int > 0 }}"
    action:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Automazione start carichi triggerata: Potenza carichi+phantom ({{ states(states('input_text.potenza_carichi'))|int + states.sensor.potenza_carichi_phantom.state|int}}) < Potenza massima ({{states.sensor.potenza_massima.state|int }}) "
    - repeat:
        until:
        - condition: template
          value_template: '{{ states.sensor.potenza_carichi_phantom.state|int > 0 }}'
        sequence:
        - service: system_log.write
          data_template:
            level: debug
            logger: homeassistant.components.pc
            message: "Avvio script start carichi: phantom ({{ states.sensor.potenza_carichi_phantom.state|int }})>0 "
        - service: script.turn_on
          data: {}
          entity_id: script.start_carichi
    mode: single

# All'avvio di HA, aggiorna gli input_slider con la lista delle entità per i campi di configurazione.
  - id: 'powercontrol_configurazione_popola_entita'
    alias: PowerControl - Configurazione- Popola entità
    trigger:
      - platform: homeassistant
        event: start
    action:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Automazione Configurazione- Popola entità - Avvio script python"
    - service: python_script.update_entities
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Automazione Configurazione- Popola entità - Script python terminato"
    mode: single

# All'avvio di HA carica la configurazione di interruttori e sensori di potenza.
  - id: 'powercontrol_configurazione_carica'
    alias: PowerControl - Configurazione - Carica
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Carica - Avvio automazione, attendo fine automazione popola_entita_per_configurazione_pc"
      - wait_template: "{{ state_attr('automation.powercontrol_configurazione_popola_entita','current') == 0 }}"
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Carica - Carico input_select dai relativi input_text"
      - service: input_select.select_option
        data:
          entity_id: input_select.potenza_carichi
          option: "{{ states.input_text.potenza_carichi.state }}"

      - service: input_select.select_option
        data:
          entity_id: input_select.carico_1_potenza
          option: "{{ states.input_text.carico_1_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_2_potenza  
          option: "{{ states.input_text.carico_2_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_3_potenza  
          option: "{{ states.input_text.carico_3_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_4_potenza  
          option: "{{ states.input_text.carico_4_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_5_potenza  
          option: "{{ states.input_text.carico_5_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_6_potenza  
          option: "{{ states.input_text.carico_6_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_7_potenza  
          option: "{{ states.input_text.carico_7_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_8_potenza  
          option: "{{ states.input_text.carico_8_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_9_potenza  
          option: "{{ states.input_text.carico_9_potenza.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_10_potenza  
          option: "{{ states.input_text.carico_10_potenza.state }}"

      - service: input_select.select_option
        data:
          entity_id: input_select.carico_1_switch
          option: "{{ states.input_text.carico_1_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_2_switch  
          option: "{{ states.input_text.carico_3_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_3_switch  
          option: "{{ states.input_text.carico_3_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_4_switch  
          option: "{{ states.input_text.carico_4_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_5_switch  
          option: "{{ states.input_text.carico_5_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_6_switch  
          option: "{{ states.input_text.carico_6_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_7_switch  
          option: "{{ states.input_text.carico_7_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_8_switch  
          option: "{{ states.input_text.carico_8_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_9_switch  
          option: "{{ states.input_text.carico_9_switch.state }}"
      - service: input_select.select_option
        data:
          entity_id: input_select.carico_10_switch  
          option: "{{ states.input_text.carico_10_switch.state }}"
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Carica - Fine caricamento"

# Quando viene modificato un parametro nella configurazione di PC tramite gli input_select, carica il valore nell'input_text relativo.
  - id: 'powercontrol_configurazione_salva'
    alias: PowerControl - Configurazione - Salva
    trigger:
      platform: state
      entity_id: 
        - input_select.potenza_carichi
        - input_select.carico_1_potenza
        - input_select.carico_2_potenza
        - input_select.carico_3_potenza
        - input_select.carico_4_potenza
        - input_select.carico_5_potenza
        - input_select.carico_6_potenza
        - input_select.carico_7_potenza
        - input_select.carico_8_potenza
        - input_select.carico_9_potenza
        - input_select.carico_10_potenza
        - input_text.carico_1_switch
        - input_text.carico_2_switch
        - input_text.carico_3_switch
        - input_text.carico_4_switch
        - input_text.carico_5_switch
        - input_text.carico_6_switch
        - input_text.carico_7_switch
        - input_text.carico_8_switch
        - input_text.carico_9_switch
        - input_text.carico_10_switch
      
    action:
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Salva - Avvio automazione, attendo fine automazione powercontrol_configurazione_carica"
      - wait_template: "{{ state_attr('automation.powercontrol_configurazione_carica','current') == 0 }}"
      - service: system_log.write
      
      
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Salva - Salvo input_select in input_text"
      - service: input_text.set_value
        data:
          entity_id: input_text.potenza_carichi
          value: "{{ states.input_select.potenza_carichi.state }}"


      - service: input_text.set_value
        data:
          entity_id: input_text.carico_1_potenza
          value: "{{ states.input_select.carico_1_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_2_potenza
          value: "{{ states.input_select.carico_2_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_3_potenza
          value: "{{ states.input_select.carico_3_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_4_potenza
          value: "{{ states.input_select.carico_4_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_5_potenza
          value: "{{ states.input_select.carico_5_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_6_potenza
          value: "{{ states.input_select.carico_6_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_7_potenza
          value: "{{ states.input_select.carico_7_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_8_potenza
          value: "{{ states.input_select.carico_8_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_9_potenza
          value: "{{ states.input_select.carico_9_potenza.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_10_potenza
          value: "{{ states.input_select.carico_10_potenza.state }}"



      - service: input_text.set_value
        data:
          entity_id: input_text.carico_1_switch
          value: "{{ states.input_select.carico_1_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_2_switch
          value: "{{ states.input_select.carico_2_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_3_switch
          value: "{{ states.input_select.carico_3_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_4_switch
          value: "{{ states.input_select.carico_4_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_5_switch
          value: "{{ states.input_select.carico_5_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_6_switch
          value: "{{ states.input_select.carico_6_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_7_switch
          value: "{{ states.input_select.carico_7_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_8_switch
          value: "{{ states.input_select.carico_8_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_9_switch
          value: "{{ states.input_select.carico_9_switch.state }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.carico_10_switch
          value: "{{ states.input_select.carico_10_switch.state }}"
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Automazione Configurazione - Salva - Fine salvataggio"

#################################################################
######################### SCRIPT  ###############################
#################################################################

script:

# I carichi vengono disattivati secondo l'ordine numerico inverso (da minore priorità a maggiore).
# Attende il completamente di uno script prima di passare al successivo.
  stop_carichi:
    alias: PowerControl - Stop carichi
    sequence:
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_10
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 10"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_10', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 10"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_9
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 9"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_9', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 9"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_8
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 8"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_8', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 8"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_7
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 7"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_7', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 7"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_6
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 6"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_6', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 6"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_5
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 5"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_5', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 5"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_4
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 4"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_4', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 4"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_3
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 3"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_3', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 3"    
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_2
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 2"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_2', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 2"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_stop_1
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script stop carico 1"
    - wait_template: "{{ is_state('script.controllo_carichi_stop_1', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script stop carico 1"
    mode: single

# I carichi vengono riattivati secondo l'ordine numerico (da maggiore priorità a minore priorità)
# Attende il completamente di uno script prima di passare al successivo.
  start_carichi:
    alias: PowerControl - Start carichi
    sequence:
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_1
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 1"
    - wait_template: "{{ is_state('script.controllo_carichi_start_1', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 1"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_2
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 2"
    - wait_template: "{{ is_state('script.controllo_carichi_start_2', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 2"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_3
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 3"
    - wait_template: "{{ is_state('script.controllo_carichi_start_3', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 3"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_4
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 4"
    - wait_template: "{{ is_state('script.controllo_carichi_start_4', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 4"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_5
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 5"
    - wait_template: "{{ is_state('script.controllo_carichi_start_5', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 5"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_6
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 6"
    - wait_template: "{{ is_state('script.controllo_carichi_start_6', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 6"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_7
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 7"
    - wait_template: "{{ is_state('script.controllo_carichi_start_7', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 7"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_8
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 8"
    - wait_template: "{{ is_state('script.controllo_carichi_start_8', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 8"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_9
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 9"
    - wait_template: "{{ is_state('script.controllo_carichi_start_9', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 9"
    - service: script.turn_on
      data: {}
      entity_id: script.controllo_carichi_start_10
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Avviato script start carico 10"
    - wait_template: "{{ is_state('script.controllo_carichi_start_10', 'off') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Terminato script start carico 10"
    mode: single

#################################################################
###################### STOP CARICHI #############################
#################################################################

# Avvia il distacco del carico.
# Verifica che il carico si aconfigurato come seonsore di potenza e come interruttore.
# Controlla se la potenza massima è superata, se il carico è acceso (potenza impegnata > 10W).
# Salva la potenza attualmente utilizzata nel relativo valore "phantom".
# Spegne l'interruttore a monte del carico ed invia la notifica. Attende TOT secondi prima di procedere col carico successivo.

  controllo_carichi_stop_1:
    alias: PowerControl - Stop Carico 1
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_1_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_1_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_1_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_1_potenza')) }}"
        entity_id: input_number.potenza_1_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Spostata potenza da carico {{ states(states('input_text.carico_1_potenza')) }} a phantom {{states.input_number.potenza_1_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_1_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_1_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 1 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_2:
    alias: PowerControl - Stop Carico 2
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_2_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_2_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_2_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_2_potenza')) }}"
        entity_id: input_number.potenza_2_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Spostata potenza da carico {{ states(states('input_text.carico_2_potenza')) }} a phantom {{states.input_number.potenza_2_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_2_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_2_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 2 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_3:
    alias: PowerControl - Stop Carico 3
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_3_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_3_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_3_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_3_potenza')) }}"
        entity_id: input_number.potenza_3_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Spostata potenza da carico {{ states(states('input_text.carico_3_potenza')) }} a phantom {{states.input_number.potenza_3_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_3_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_3_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 3 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_4:
    alias: PowerControl - Stop Carico 4
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_4_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_4_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_4_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_4_potenza')) }}"
        entity_id: input_number.potenza_4_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Spostata potenza da carico {{ states(states('input_text.carico_4_potenza')) }} a phantom {{states.input_number.potenza_4_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_4_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_4_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 4 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_5:
    alias: PowerControl - Stop Carico 5
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_5_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_5_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_5_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_5_potenza')) }}"
        entity_id: input_number.potenza_5_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Spostata potenza da carico {{ states(states('input_text.carico_5_potenza')) }} a phantom {{states.input_number.potenza_5_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_5_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_5_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 5 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single



  controllo_carichi_stop_6:
    alias: PowerControl - Stop Carico 6
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_6_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_6_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_6_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_6_potenza')) }}"
        entity_id: input_number.potenza_6_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Spostata potenza da carico {{ states(states('input_text.carico_6_potenza')) }} a phantom {{states.input_number.potenza_6_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_6_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_6_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 6 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_7:
    alias: PowerControl - Stop Carico 7
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_7_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_7_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_7_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_7_potenza')) }}"
        entity_id: input_number.potenza_7_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Spostata potenza da carico {{ states(states('input_text.carico_7_potenza')) }} a phantom {{states.input_number.potenza_7_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_7_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_7_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 7 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_8:
    alias: PowerControl - Stop Carico 8
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_8_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_8_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_8_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_8_potenza')) }}"
        entity_id: input_number.potenza_8_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Spostata potenza da carico {{ states(states('input_text.carico_8_potenza')) }} a phantom {{states.input_number.potenza_8_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_8_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_8_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 8 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_9:
    alias: PowerControl - Stop Carico 9
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_9_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_9_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_9_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_9_potenza')) }}"
        entity_id: input_number.potenza_9_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Spostata potenza da carico {{ states(states('input_text.carico_9_potenza')) }} a phantom {{states.input_number.potenza_9_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_9_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_9_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 9 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single


  controllo_carichi_stop_10:
    alias: PowerControl - Stop Carico 10
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_10_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Condition 1 - Ok"
    - condition: template
      value_template: "{{ states('input_text.carico_10_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Condition 2 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int > states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Condition 3 - Ok"
    - condition: template
      value_template: "{{ states(states('input_text.carico_10_potenza')) |int > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Condition 4 - Ok"
    - service: input_number.set_value
      data_template:
        value: "{{ states(states('input_text.carico_10_potenza')) }}"
        entity_id: input_number.potenza_10_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Spostata potenza da carico {{ states(states('input_text.carico_10_potenza')) }} a phantom {{states.input_number.potenza_10_phantom.state}} (dovrebbero essere uguali)."
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ states('input_text.carico_10_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Spento carico"        
    - service: notify.tutti
      data:
        title: Limite potenza superato
        message: "{{ state_attr(states('input_text.carico_10_switch'),'friendly_name') }} disattivato."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Carico 10 - Inviata notifica. Attendo {{ states.input_number.attesa_stop.state }} secondi "
    - delay: 
        seconds: "{{ states.input_number.attesa_stop.state }}"
    mode: single

#################################################################
###################### START CARICHI ############################
#################################################################

# Script per la riattivazione dei carichi.
# Verifica che il carico si aconfigurato come seonsore di potenza e come interruttore.
# Controlla che il carico sia stato disattivato (potenza in attesa)
# Controlla che il limite di potenza venga rispettato.
# Controlla anche se riattivando il carico (ipotizzando un consumo pari a quello che aveva all'atto della disattivazione) non supera il valore massimo.
# Quest'ultimo controllo serve ad evitare che si riattacchi un carico che poi si ristacchi dopo pochi secondi perché ha causato un nuovo sforamento del limite.
# Imposta il relativo valore "phantom" a zero, riattiva l'interruttore ed invia una notifica di riattivazione.
# Infine attende TOT minuti  prima di passare al carico successivo.

  controllo_carichi_start_1:
    alias: PowerControl - Start Carico 1
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_1_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_1_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_1_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_1_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_1_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_1_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_1_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 1 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single

  controllo_carichi_start_2:
    alias: PowerControl - Start Carico 2
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_2_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_2_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_2_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_2_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_2_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_2_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_2_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 2 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_3:
    alias: PowerControl - Start Carico 3
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_3_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_3_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_3_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_3_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_3_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_3_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_3_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 3 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_4:
    alias: PowerControl - Start Carico 4
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_4_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_4_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_4_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_4_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_4_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_4_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_4_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 4 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_5:
    alias: PowerControl - Start Carico 5
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_5_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_5_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_5_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_5_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_5_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_5_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_5_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 5 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_6:
    alias: PowerControl - Start Carico 6
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_6_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_6_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_6_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_6_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_6_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_6_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_6_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 6 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_7:
    alias: PowerControl - Start Carico 7
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_7_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_7_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_7_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_7_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_7_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_7_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_7_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 7 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_8:
    alias: PowerControl - Start Carico 8
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_8_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_8_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_8_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_8_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_8_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_8_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_8_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 8 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_9:
    alias: PowerControl - Start Carico 9
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_9_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_9_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_9_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_9_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_9_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_9_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_9_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 9 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
  controllo_carichi_start_10:
    alias: PowerControl - Start Carico 10
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Avvio"
    - condition: template
      value_template: "{{ states('input_text.carico_10_potenza') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Condition 1 ok"
    - condition: template
      value_template: "{{ states('input_text.carico_10_switch') != 'Seleziona' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Condition 2 ok"
    - condition: template
      value_template: "{{ states.input_number.potenza_10_phantom.state|int > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Condition 3 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int < states.sensor.potenza_massima.state|int}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Condition 4 ok"
    - condition: template
      value_template: "{{ states(states('input_text.potenza_carichi'))|int + states.input_number.potenza_10_phantom.state|int < states.sensor.potenza_massima.state|int }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Condition 5 ok"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_10_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Resettata potenza phantom"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_10_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Attivato interruttore"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_10_switch'),'friendly_name') }} Riattivato"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico 10 - Inviata notifica. Attendo {{ states.input_number.attesa_start.state }} minuti"
    - delay:
        minutes: "{{ states.input_number.attesa_start.state }}"
    mode: single
    
    
    
#################################################################
###################### RESET CARICHI ############################
#################################################################
# Script per resettare il valore phantom di tutti i carichi, utile in caso si sia riacceso un carico senza passare dalle funzioni del pacchetto.
# Invia una notifica generale al termine del reset.

  controllo_carichi_reset:
    alias: PowerControl - Reset
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_1_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 1"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_2_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 2"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_3_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 3"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_4_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 4"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_5_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 5"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_6_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 6"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_7_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 7"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_8_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 8"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_9_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 9"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_10_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Resettato carico 10"
    - service: notify.tutti
      data:
        title: Reset eseguito
        message: "I carichi in attesa sono stati resettati. E' possibile procedere con la riattivazione manuale degli interruttori."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Reset Carichi - Inviata notifica"
    mode: single


#################################################################
################## START MANUALE CARICHI ########################
#################################################################
# Conquesti script è possibile riattivare manualmente un carico.
# Oltre a riattivare l'interruttore, imposta la potenza phantom a 0 ed invia una notifica. 
# Sono associati ai relativi pulsanti sul frontend.

  controllo_carichi_start_manuale_1:
    alias: PowerControl - Start Carico Manuale 1
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 1 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_1_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 1 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_1_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 1 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_1_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 1 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_2:
    alias: PowerControl - Start Carico Manuale 2
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 2 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_2_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 2 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_2_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 2 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_2_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 2 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_3:
    alias: PowerControl - Start Carico Manuale 3
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 3 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_3_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 3 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_3_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 3 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_3_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 3 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_4:
    alias: PowerControl - Start Carico Manuale 4
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 4 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_4_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 4 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_4_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 4 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_4_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 4 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_5:
    alias: PowerControl - Start Carico Manuale 5
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 5 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_5_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 5 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_5_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 5 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_5_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 5 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_6:
    alias: PowerControl - Start Carico Manuale 6
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 6 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_6_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 6 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_6_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 6 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_6_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 6 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_7:
    alias: PowerControl - Start Carico Manuale 7
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 7 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_7_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 7 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_7_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 7 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_7_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 7 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_8:
    alias: PowerControl - Start Carico Manuale 8
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 8 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_8_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 8 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_8_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 8 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_9_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 9 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_9:
    alias: PowerControl - Start Carico Manuale 9
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 9 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_9_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 9 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_9_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 9 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_9_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 9 - Inviata notifica"
    mode: single


  controllo_carichi_start_manuale_10:
    alias: PowerControl - Start Carico Manuale 10
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 10 - Avvio"
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: input_number.potenza_10_phantom
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 10 - Impostata potenza phantom a zero"
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ states('input_text.carico_10_switch') }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 10 - Spento carico tramite switch"
    - service: notify.tutti
      data:
        title: Limite potenza rientrato
        message: "{{ state_attr(states('input_text.carico_10_switch'),'friendly_name') }} Riattivato manualmente"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Carico Manuale 10 - Inviata notifica"
    mode: single
